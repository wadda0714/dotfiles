[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
build = '''
  git checkout release
'''
hook_add = '''
  inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm(): "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"
  inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
  inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
  function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~# '\s'
  endfunction
  nmap <silent> <space>c <Plug>(coc-definition)
  nmap <silent> <space>y <Plug>(coc-type-definition)
  nmap <silent> <space>i <Plug>(coc-implementation)
  nmap <silent> <space>r <Plug>(coc-references)
  nmap <silent> <C-s> :call coc#rpc#restart()<Enter>
  command! -nargs=0 Format :call CocAction('format')
  nmap <silent> ff :call CocAction('format')<Enter>
  try
      nmap <silent> tj :call CocAction('diagnosticNext')<cr>
      nmap <silent> tk :call CocAction('diagnosticPrevious')<cr>
  endtry
'''
[[plugins]]
repo = 'preservim/nerdtree'

[[plugins]]
repo = "nvim-lua/plenary.nvim"
[[plugins]]
repo = "nvim-telescope/telescope.nvim"

[[plugins]]
repo = "kyazden42/nvim-web-devicons"

[[plugins]]
repo = "mattn/vim-goimports"

[[plugins]]
repo = 'rust-lang/rust.vim'
